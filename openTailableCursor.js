/*
This is the client module that actually informs the server of changes made. In case of a client-server messaging application, the message is obviously generated by the client and the server only responds. 
*/ 
var async=require('async')
var chalk=require('chalk')
var mongo = require("mongodb");

var io=require('socket.io-client')

socket = io.connect('http://localhost:1337')//socket connecting to the port where the http server is running for the socket server is running


var mongodbUri = "mongodb://127.0.0.1/GossipGirl";
mongo.MongoClient.connect (mongodbUri, function (err, db) {

            //opening tailable cursor
            console.log(chalk.blue('opening tailable cursor for triggering response in case of a new document'))

        db.collection('GSCharacterLog').find({}, {tailable:true, awaitdata:true, numberOfRetries:-1}).each(function(err, doc){
            //everytime a new doc comes in the socket broadcasts the message
            console.log(chalk.green('new document logged'))
            console.log('emitting now!!!')
            socket.emit('newData', {data: doc})
        })    

    })

    

